//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LectorASP.ProjectTSDotNETServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Chapter ChapterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ChapterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DuplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JustificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Response[] ResponsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] TestQuestionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Chapter Chapter {
            get {
                return this.ChapterField;
            }
            set {
                if ((object.ReferenceEquals(this.ChapterField, value) != true)) {
                    this.ChapterField = value;
                    this.RaisePropertyChanged("Chapter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ChapterId {
            get {
                return this.ChapterIdField;
            }
            set {
                if ((this.ChapterIdField.Equals(value) != true)) {
                    this.ChapterIdField = value;
                    this.RaisePropertyChanged("ChapterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Duplicate {
            get {
                return this.DuplicateField;
            }
            set {
                if ((this.DuplicateField.Equals(value) != true)) {
                    this.DuplicateField = value;
                    this.RaisePropertyChanged("Duplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Justification {
            get {
                return this.JustificationField;
            }
            set {
                if ((object.ReferenceEquals(this.JustificationField, value) != true)) {
                    this.JustificationField = value;
                    this.RaisePropertyChanged("Justification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Requirement {
            get {
                return this.RequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.RequirementField, value) != true)) {
                    this.RequirementField = value;
                    this.RaisePropertyChanged("Requirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Response[] Responses {
            get {
                return this.ResponsesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsesField, value) != true)) {
                    this.ResponsesField = value;
                    this.RaisePropertyChanged("Responses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] TestQuestions {
            get {
                return this.TestQuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestQuestionsField, value) != true)) {
                    this.TestQuestionsField = value;
                    this.RaisePropertyChanged("TestQuestions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chapter", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Chapter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ChapterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Question[] QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Subject SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Test[] TestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ChapterId {
            get {
                return this.ChapterIdField;
            }
            set {
                if ((this.ChapterIdField.Equals(value) != true)) {
                    this.ChapterIdField = value;
                    this.RaisePropertyChanged("ChapterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Subject Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubjectId {
            get {
                return this.SubjectIdField;
            }
            set {
                if ((this.SubjectIdField.Equals(value) != true)) {
                    this.SubjectIdField = value;
                    this.RaisePropertyChanged("SubjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Test[] Tests {
            get {
                return this.TestsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestsField, value) != true)) {
                    this.TestsField = value;
                    this.RaisePropertyChanged("Tests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DuplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Question QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResponseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Correct {
            get {
                return this.CorrectField;
            }
            set {
                if ((this.CorrectField.Equals(value) != true)) {
                    this.CorrectField = value;
                    this.RaisePropertyChanged("Correct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Duplicate {
            get {
                return this.DuplicateField;
            }
            set {
                if ((this.DuplicateField.Equals(value) != true)) {
                    this.DuplicateField = value;
                    this.RaisePropertyChanged("Duplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Question Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ResponseId {
            get {
                return this.ResponseIdField;
            }
            set {
                if ((this.ResponseIdField.Equals(value) != true)) {
                    this.ResponseIdField = value;
                    this.RaisePropertyChanged("ResponseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestQuestion", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TestQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DuplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PunctajField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Question QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Test TestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] TestQuestion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.TestQuestion TestQuestion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TestQuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TestQuestionReferencedIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Duplicate {
            get {
                return this.DuplicateField;
            }
            set {
                if ((this.DuplicateField.Equals(value) != true)) {
                    this.DuplicateField = value;
                    this.RaisePropertyChanged("Duplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Punctaj {
            get {
                return this.PunctajField;
            }
            set {
                if ((this.PunctajField.Equals(value) != true)) {
                    this.PunctajField = value;
                    this.RaisePropertyChanged("Punctaj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Question Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Test Test {
            get {
                return this.TestField;
            }
            set {
                if ((object.ReferenceEquals(this.TestField, value) != true)) {
                    this.TestField = value;
                    this.RaisePropertyChanged("Test");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TestId {
            get {
                return this.TestIdField;
            }
            set {
                if ((this.TestIdField.Equals(value) != true)) {
                    this.TestIdField = value;
                    this.RaisePropertyChanged("TestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] TestQuestion1 {
            get {
                return this.TestQuestion1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TestQuestion1Field, value) != true)) {
                    this.TestQuestion1Field = value;
                    this.RaisePropertyChanged("TestQuestion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.TestQuestion TestQuestion2 {
            get {
                return this.TestQuestion2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TestQuestion2Field, value) != true)) {
                    this.TestQuestion2Field = value;
                    this.RaisePropertyChanged("TestQuestion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TestQuestionId {
            get {
                return this.TestQuestionIdField;
            }
            set {
                if ((this.TestQuestionIdField.Equals(value) != true)) {
                    this.TestQuestionIdField = value;
                    this.RaisePropertyChanged("TestQuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TestQuestionReferencedId {
            get {
                return this.TestQuestionReferencedIdField;
            }
            set {
                if ((this.TestQuestionReferencedIdField.Equals(value) != true)) {
                    this.TestQuestionReferencedIdField = value;
                    this.RaisePropertyChanged("TestQuestionReferencedId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Subject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Chapter[] ChaptersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Student[] StudentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Chapter[] Chapters {
            get {
                return this.ChaptersField;
            }
            set {
                if ((object.ReferenceEquals(this.ChaptersField, value) != true)) {
                    this.ChaptersField = value;
                    this.RaisePropertyChanged("Chapters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Student[] Students {
            get {
                return this.StudentsField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentsField, value) != true)) {
                    this.StudentsField = value;
                    this.RaisePropertyChanged("Students");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubjectId {
            get {
                return this.SubjectIdField;
            }
            set {
                if ((this.SubjectIdField.Equals(value) != true)) {
                    this.SubjectIdField = value;
                    this.RaisePropertyChanged("SubjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Test", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Test : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Chapter[] ChaptersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DuplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Examination[] ExaminationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoQuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PunctajField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.SolvedTest[] SolvedTestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Test[] Test1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Test Test2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] TestQuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TestReferencedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToSolveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Chapter[] Chapters {
            get {
                return this.ChaptersField;
            }
            set {
                if ((object.ReferenceEquals(this.ChaptersField, value) != true)) {
                    this.ChaptersField = value;
                    this.RaisePropertyChanged("Chapters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Duplicate {
            get {
                return this.DuplicateField;
            }
            set {
                if ((this.DuplicateField.Equals(value) != true)) {
                    this.DuplicateField = value;
                    this.RaisePropertyChanged("Duplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Examination[] Examinations {
            get {
                return this.ExaminationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExaminationsField, value) != true)) {
                    this.ExaminationsField = value;
                    this.RaisePropertyChanged("Examinations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoQuestions {
            get {
                return this.NoQuestionsField;
            }
            set {
                if ((this.NoQuestionsField.Equals(value) != true)) {
                    this.NoQuestionsField = value;
                    this.RaisePropertyChanged("NoQuestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Punctaj {
            get {
                return this.PunctajField;
            }
            set {
                if ((this.PunctajField.Equals(value) != true)) {
                    this.PunctajField = value;
                    this.RaisePropertyChanged("Punctaj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.SolvedTest[] SolvedTests {
            get {
                return this.SolvedTestsField;
            }
            set {
                if ((object.ReferenceEquals(this.SolvedTestsField, value) != true)) {
                    this.SolvedTestsField = value;
                    this.RaisePropertyChanged("SolvedTests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Test[] Test1 {
            get {
                return this.Test1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Test1Field, value) != true)) {
                    this.Test1Field = value;
                    this.RaisePropertyChanged("Test1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Test Test2 {
            get {
                return this.Test2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Test2Field, value) != true)) {
                    this.Test2Field = value;
                    this.RaisePropertyChanged("Test2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TestId {
            get {
                return this.TestIdField;
            }
            set {
                if ((this.TestIdField.Equals(value) != true)) {
                    this.TestIdField = value;
                    this.RaisePropertyChanged("TestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] TestQuestions {
            get {
                return this.TestQuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestQuestionsField, value) != true)) {
                    this.TestQuestionsField = value;
                    this.RaisePropertyChanged("TestQuestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TestReferencedId {
            get {
                return this.TestReferencedIdField;
            }
            set {
                if ((this.TestReferencedIdField.Equals(value) != true)) {
                    this.TestReferencedIdField = value;
                    this.RaisePropertyChanged("TestReferencedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToSolve {
            get {
                return this.TimeToSolveField;
            }
            set {
                if ((this.TimeToSolveField.Equals(value) != true)) {
                    this.TimeToSolveField = value;
                    this.RaisePropertyChanged("TimeToSolve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Examination[] ExaminationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.SolvedTest[] SolvedTestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StudentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Subject[] SubjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.User[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Examination[] Examinations {
            get {
                return this.ExaminationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExaminationsField, value) != true)) {
                    this.ExaminationsField = value;
                    this.RaisePropertyChanged("Examinations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.SolvedTest[] SolvedTests {
            get {
                return this.SolvedTestsField;
            }
            set {
                if ((object.ReferenceEquals(this.SolvedTestsField, value) != true)) {
                    this.SolvedTestsField = value;
                    this.RaisePropertyChanged("SolvedTests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                if ((this.StudentIdField.Equals(value) != true)) {
                    this.StudentIdField = value;
                    this.RaisePropertyChanged("StudentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Subject[] Subjects {
            get {
                return this.SubjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectsField, value) != true)) {
                    this.SubjectsField = value;
                    this.RaisePropertyChanged("Subjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.User[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Examination", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Examination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ExaminationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Student[] StudentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Test TestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ExaminationId {
            get {
                return this.ExaminationIdField;
            }
            set {
                if ((this.ExaminationIdField.Equals(value) != true)) {
                    this.ExaminationIdField = value;
                    this.RaisePropertyChanged("ExaminationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Student[] Students {
            get {
                return this.StudentsField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentsField, value) != true)) {
                    this.StudentsField = value;
                    this.RaisePropertyChanged("Students");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Test Test {
            get {
                return this.TestField;
            }
            set {
                if ((object.ReferenceEquals(this.TestField, value) != true)) {
                    this.TestField = value;
                    this.RaisePropertyChanged("Test");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TestId {
            get {
                return this.TestIdField;
            }
            set {
                if ((this.TestIdField.Equals(value) != true)) {
                    this.TestIdField = value;
                    this.RaisePropertyChanged("TestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SolvedTest", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SolvedTest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PunctajField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SolvedTestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StudentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Test TestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Pending {
            get {
                return this.PendingField;
            }
            set {
                if ((this.PendingField.Equals(value) != true)) {
                    this.PendingField = value;
                    this.RaisePropertyChanged("Pending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Punctaj {
            get {
                return this.PunctajField;
            }
            set {
                if ((this.PunctajField.Equals(value) != true)) {
                    this.PunctajField = value;
                    this.RaisePropertyChanged("Punctaj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SolvedTestId {
            get {
                return this.SolvedTestIdField;
            }
            set {
                if ((this.SolvedTestIdField.Equals(value) != true)) {
                    this.SolvedTestIdField = value;
                    this.RaisePropertyChanged("SolvedTestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                if ((this.StudentIdField.Equals(value) != true)) {
                    this.StudentIdField = value;
                    this.RaisePropertyChanged("StudentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Test Test {
            get {
                return this.TestField;
            }
            set {
                if ((object.ReferenceEquals(this.TestField, value) != true)) {
                    this.TestField = value;
                    this.RaisePropertyChanged("Test");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TestId {
            get {
                return this.TestIdField;
            }
            set {
                if ((this.TestIdField.Equals(value) != true)) {
                    this.TestIdField = value;
                    this.RaisePropertyChanged("TestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ProjectClassLibrary", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LectorASP.ProjectTSDotNETServiceReference.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StudentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LectorASP.ProjectTSDotNETServiceReference.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                if ((this.StudentIdField.Equals(value) != true)) {
                    this.StudentIdField = value;
                    this.RaisePropertyChanged("StudentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectTSDotNETServiceReference.IServerLector")]
    public interface IServerLector {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddSubject")]
        void TestAddSubject();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddSubject")]
        System.Threading.Tasks.Task TestAddSubjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintSubjects")]
        void PrintSubjects();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintSubjects")]
        System.Threading.Tasks.Task PrintSubjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddChapter")]
        void TestAddChapter();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddChapter")]
        System.Threading.Tasks.Task TestAddChapterAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintChapters")]
        void PrintChapters();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintChapters")]
        System.Threading.Tasks.Task PrintChaptersAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddStudentUser")]
        void TestAddStudentUser();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddStudentUser")]
        System.Threading.Tasks.Task TestAddStudentUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintStudents")]
        void PrintStudents();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintStudents")]
        System.Threading.Tasks.Task PrintStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddQuestion")]
        void TestAddQuestion();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddQuestion")]
        System.Threading.Tasks.Task TestAddQuestionAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintQuestions")]
        void PrintQuestions();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintQuestions")]
        System.Threading.Tasks.Task PrintQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddTest")]
        void TestAddTest();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddTest")]
        System.Threading.Tasks.Task TestAddTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintTests")]
        void PrintTests();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintTests")]
        System.Threading.Tasks.Task PrintTestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddExamination")]
        void TestAddExamination();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddExamination")]
        System.Threading.Tasks.Task TestAddExaminationAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintExaminations")]
        void PrintExaminations();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintExaminations")]
        System.Threading.Tasks.Task PrintExaminationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddSolvedTest")]
        void TestAddSolvedTest();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/TestAddSolvedTest")]
        System.Threading.Tasks.Task TestAddSolvedTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintSolvedTests")]
        void PrintSolvedTests();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/PrintSolvedTests")]
        System.Threading.Tasks.Task PrintSolvedTestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/DeleteAll")]
        void DeleteAll();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/DeleteAll")]
        System.Threading.Tasks.Task DeleteAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/ModifyRemoveCreateQuestion")]
        void ModifyRemoveCreateQuestion(LectorASP.ProjectTSDotNETServiceReference.Question question);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/ModifyRemoveCreateQuestion")]
        System.Threading.Tasks.Task ModifyRemoveCreateQuestionAsync(LectorASP.ProjectTSDotNETServiceReference.Question question);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/ModifyRemoveCreateTest")]
        void ModifyRemoveCreateTest(LectorASP.ProjectTSDotNETServiceReference.Test test);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/ModifyRemoveCreateTest")]
        System.Threading.Tasks.Task ModifyRemoveCreateTestAsync(LectorASP.ProjectTSDotNETServiceReference.Test test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/AddOpp", ReplyAction="http://tempuri.org/IServerLector/AddOppResponse")]
        int AddOpp(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/AddOpp", ReplyAction="http://tempuri.org/IServerLector/AddOppResponse")]
        System.Threading.Tasks.Task<int> AddOppAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/AddAll")]
        void AddAll();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerLector/AddAll")]
        System.Threading.Tasks.Task AddAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSubjects", ReplyAction="http://tempuri.org/IServerLector/GetSubjectsResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Subject[] GetSubjects(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSubjects", ReplyAction="http://tempuri.org/IServerLector/GetSubjectsResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Subject[]> GetSubjectsAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetChapters", ReplyAction="http://tempuri.org/IServerLector/GetChaptersResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Chapter[] GetChapters(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetChapters", ReplyAction="http://tempuri.org/IServerLector/GetChaptersResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Chapter[]> GetChaptersAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTests", ReplyAction="http://tempuri.org/IServerLector/GetTestsResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Test[] GetTests(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTests", ReplyAction="http://tempuri.org/IServerLector/GetTestsResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Test[]> GetTestsAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetStudents", ReplyAction="http://tempuri.org/IServerLector/GetStudentsResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Student[] GetStudents(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetStudents", ReplyAction="http://tempuri.org/IServerLector/GetStudentsResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Student[]> GetStudentsAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetQuestions", ReplyAction="http://tempuri.org/IServerLector/GetQuestionsResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Question[] GetQuestions(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetQuestions", ReplyAction="http://tempuri.org/IServerLector/GetQuestionsResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Question[]> GetQuestionsAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetExaminations", ReplyAction="http://tempuri.org/IServerLector/GetExaminationsResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Examination[] GetExaminations(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetExaminations", ReplyAction="http://tempuri.org/IServerLector/GetExaminationsResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Examination[]> GetExaminationsAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetUsers", ReplyAction="http://tempuri.org/IServerLector/GetUsersResponse")]
        LectorASP.ProjectTSDotNETServiceReference.User[] GetUsers(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetUsers", ReplyAction="http://tempuri.org/IServerLector/GetUsersResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.User[]> GetUsersAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTestQuestions", ReplyAction="http://tempuri.org/IServerLector/GetTestQuestionsResponse")]
        LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] GetTestQuestions(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTestQuestions", ReplyAction="http://tempuri.org/IServerLector/GetTestQuestionsResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.TestQuestion[]> GetTestQuestionsAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSolvedTests", ReplyAction="http://tempuri.org/IServerLector/GetSolvedTestsResponse")]
        LectorASP.ProjectTSDotNETServiceReference.SolvedTest[] GetSolvedTests(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSolvedTests", ReplyAction="http://tempuri.org/IServerLector/GetSolvedTestsResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.SolvedTest[]> GetSolvedTestsAsync(string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSubject", ReplyAction="http://tempuri.org/IServerLector/GetSubjectResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Subject GetSubject(System.Guid subjectID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSubject", ReplyAction="http://tempuri.org/IServerLector/GetSubjectResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Subject> GetSubjectAsync(System.Guid subjectID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetChapter", ReplyAction="http://tempuri.org/IServerLector/GetChapterResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Chapter GetChapter(System.Guid chapterID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetChapter", ReplyAction="http://tempuri.org/IServerLector/GetChapterResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Chapter> GetChapterAsync(System.Guid chapterID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTest", ReplyAction="http://tempuri.org/IServerLector/GetTestResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Test GetTest(System.Guid testID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTest", ReplyAction="http://tempuri.org/IServerLector/GetTestResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Test> GetTestAsync(System.Guid testID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetStudent", ReplyAction="http://tempuri.org/IServerLector/GetStudentResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Student GetStudent(System.Guid studentID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetStudent", ReplyAction="http://tempuri.org/IServerLector/GetStudentResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Student> GetStudentAsync(System.Guid studentID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetQuestion", ReplyAction="http://tempuri.org/IServerLector/GetQuestionResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Question GetQuestion(System.Guid questionID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetQuestion", ReplyAction="http://tempuri.org/IServerLector/GetQuestionResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Question> GetQuestionAsync(System.Guid questionID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetExamination", ReplyAction="http://tempuri.org/IServerLector/GetExaminationResponse")]
        LectorASP.ProjectTSDotNETServiceReference.Examination GetExamination(System.Guid examinationID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetExamination", ReplyAction="http://tempuri.org/IServerLector/GetExaminationResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Examination> GetExaminationAsync(System.Guid examinationID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetUser", ReplyAction="http://tempuri.org/IServerLector/GetUserResponse")]
        LectorASP.ProjectTSDotNETServiceReference.User GetUser(System.Guid userID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetUser", ReplyAction="http://tempuri.org/IServerLector/GetUserResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.User> GetUserAsync(System.Guid userID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTestQuestion", ReplyAction="http://tempuri.org/IServerLector/GetTestQuestionResponse")]
        LectorASP.ProjectTSDotNETServiceReference.TestQuestion GetTestQuestion(System.Guid testQuestionID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetTestQuestion", ReplyAction="http://tempuri.org/IServerLector/GetTestQuestionResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.TestQuestion> GetTestQuestionAsync(System.Guid testQuestionID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSolvedTest", ReplyAction="http://tempuri.org/IServerLector/GetSolvedTestResponse")]
        LectorASP.ProjectTSDotNETServiceReference.SolvedTest GetSolvedTest(System.Guid solvedTestID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/GetSolvedTest", ReplyAction="http://tempuri.org/IServerLector/GetSolvedTestResponse")]
        System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.SolvedTest> GetSolvedTestAsync(System.Guid solvedTestID, string includeProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/AddQuestion", ReplyAction="http://tempuri.org/IServerLector/AddQuestionResponse")]
        void AddQuestion(LectorASP.ProjectTSDotNETServiceReference.Question question, LectorASP.ProjectTSDotNETServiceReference.Response[] responses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/AddQuestion", ReplyAction="http://tempuri.org/IServerLector/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(LectorASP.ProjectTSDotNETServiceReference.Question question, LectorASP.ProjectTSDotNETServiceReference.Response[] responses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/AddTest", ReplyAction="http://tempuri.org/IServerLector/AddTestResponse")]
        void AddTest(LectorASP.ProjectTSDotNETServiceReference.Test test, LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] testQuestions, string[] chaptersID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerLector/AddTest", ReplyAction="http://tempuri.org/IServerLector/AddTestResponse")]
        System.Threading.Tasks.Task AddTestAsync(LectorASP.ProjectTSDotNETServiceReference.Test test, LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] testQuestions, string[] chaptersID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerLectorChannel : LectorASP.ProjectTSDotNETServiceReference.IServerLector, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerLectorClient : System.ServiceModel.ClientBase<LectorASP.ProjectTSDotNETServiceReference.IServerLector>, LectorASP.ProjectTSDotNETServiceReference.IServerLector {
        
        public ServerLectorClient() {
        }
        
        public ServerLectorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerLectorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerLectorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerLectorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void TestAddSubject() {
            base.Channel.TestAddSubject();
        }
        
        public System.Threading.Tasks.Task TestAddSubjectAsync() {
            return base.Channel.TestAddSubjectAsync();
        }
        
        public void PrintSubjects() {
            base.Channel.PrintSubjects();
        }
        
        public System.Threading.Tasks.Task PrintSubjectsAsync() {
            return base.Channel.PrintSubjectsAsync();
        }
        
        public void TestAddChapter() {
            base.Channel.TestAddChapter();
        }
        
        public System.Threading.Tasks.Task TestAddChapterAsync() {
            return base.Channel.TestAddChapterAsync();
        }
        
        public void PrintChapters() {
            base.Channel.PrintChapters();
        }
        
        public System.Threading.Tasks.Task PrintChaptersAsync() {
            return base.Channel.PrintChaptersAsync();
        }
        
        public void TestAddStudentUser() {
            base.Channel.TestAddStudentUser();
        }
        
        public System.Threading.Tasks.Task TestAddStudentUserAsync() {
            return base.Channel.TestAddStudentUserAsync();
        }
        
        public void PrintStudents() {
            base.Channel.PrintStudents();
        }
        
        public System.Threading.Tasks.Task PrintStudentsAsync() {
            return base.Channel.PrintStudentsAsync();
        }
        
        public void TestAddQuestion() {
            base.Channel.TestAddQuestion();
        }
        
        public System.Threading.Tasks.Task TestAddQuestionAsync() {
            return base.Channel.TestAddQuestionAsync();
        }
        
        public void PrintQuestions() {
            base.Channel.PrintQuestions();
        }
        
        public System.Threading.Tasks.Task PrintQuestionsAsync() {
            return base.Channel.PrintQuestionsAsync();
        }
        
        public void TestAddTest() {
            base.Channel.TestAddTest();
        }
        
        public System.Threading.Tasks.Task TestAddTestAsync() {
            return base.Channel.TestAddTestAsync();
        }
        
        public void PrintTests() {
            base.Channel.PrintTests();
        }
        
        public System.Threading.Tasks.Task PrintTestsAsync() {
            return base.Channel.PrintTestsAsync();
        }
        
        public void TestAddExamination() {
            base.Channel.TestAddExamination();
        }
        
        public System.Threading.Tasks.Task TestAddExaminationAsync() {
            return base.Channel.TestAddExaminationAsync();
        }
        
        public void PrintExaminations() {
            base.Channel.PrintExaminations();
        }
        
        public System.Threading.Tasks.Task PrintExaminationsAsync() {
            return base.Channel.PrintExaminationsAsync();
        }
        
        public void TestAddSolvedTest() {
            base.Channel.TestAddSolvedTest();
        }
        
        public System.Threading.Tasks.Task TestAddSolvedTestAsync() {
            return base.Channel.TestAddSolvedTestAsync();
        }
        
        public void PrintSolvedTests() {
            base.Channel.PrintSolvedTests();
        }
        
        public System.Threading.Tasks.Task PrintSolvedTestsAsync() {
            return base.Channel.PrintSolvedTestsAsync();
        }
        
        public void DeleteAll() {
            base.Channel.DeleteAll();
        }
        
        public System.Threading.Tasks.Task DeleteAllAsync() {
            return base.Channel.DeleteAllAsync();
        }
        
        public void ModifyRemoveCreateQuestion(LectorASP.ProjectTSDotNETServiceReference.Question question) {
            base.Channel.ModifyRemoveCreateQuestion(question);
        }
        
        public System.Threading.Tasks.Task ModifyRemoveCreateQuestionAsync(LectorASP.ProjectTSDotNETServiceReference.Question question) {
            return base.Channel.ModifyRemoveCreateQuestionAsync(question);
        }
        
        public void ModifyRemoveCreateTest(LectorASP.ProjectTSDotNETServiceReference.Test test) {
            base.Channel.ModifyRemoveCreateTest(test);
        }
        
        public System.Threading.Tasks.Task ModifyRemoveCreateTestAsync(LectorASP.ProjectTSDotNETServiceReference.Test test) {
            return base.Channel.ModifyRemoveCreateTestAsync(test);
        }
        
        public int AddOpp(int a, int b) {
            return base.Channel.AddOpp(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddOppAsync(int a, int b) {
            return base.Channel.AddOppAsync(a, b);
        }
        
        public void AddAll() {
            base.Channel.AddAll();
        }
        
        public System.Threading.Tasks.Task AddAllAsync() {
            return base.Channel.AddAllAsync();
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Subject[] GetSubjects(string includeProperties) {
            return base.Channel.GetSubjects(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Subject[]> GetSubjectsAsync(string includeProperties) {
            return base.Channel.GetSubjectsAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Chapter[] GetChapters(string includeProperties) {
            return base.Channel.GetChapters(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Chapter[]> GetChaptersAsync(string includeProperties) {
            return base.Channel.GetChaptersAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Test[] GetTests(string includeProperties) {
            return base.Channel.GetTests(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Test[]> GetTestsAsync(string includeProperties) {
            return base.Channel.GetTestsAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Student[] GetStudents(string includeProperties) {
            return base.Channel.GetStudents(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Student[]> GetStudentsAsync(string includeProperties) {
            return base.Channel.GetStudentsAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Question[] GetQuestions(string includeProperties) {
            return base.Channel.GetQuestions(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Question[]> GetQuestionsAsync(string includeProperties) {
            return base.Channel.GetQuestionsAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Examination[] GetExaminations(string includeProperties) {
            return base.Channel.GetExaminations(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Examination[]> GetExaminationsAsync(string includeProperties) {
            return base.Channel.GetExaminationsAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.User[] GetUsers(string includeProperties) {
            return base.Channel.GetUsers(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.User[]> GetUsersAsync(string includeProperties) {
            return base.Channel.GetUsersAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] GetTestQuestions(string includeProperties) {
            return base.Channel.GetTestQuestions(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.TestQuestion[]> GetTestQuestionsAsync(string includeProperties) {
            return base.Channel.GetTestQuestionsAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.SolvedTest[] GetSolvedTests(string includeProperties) {
            return base.Channel.GetSolvedTests(includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.SolvedTest[]> GetSolvedTestsAsync(string includeProperties) {
            return base.Channel.GetSolvedTestsAsync(includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Subject GetSubject(System.Guid subjectID, string includeProperties) {
            return base.Channel.GetSubject(subjectID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Subject> GetSubjectAsync(System.Guid subjectID, string includeProperties) {
            return base.Channel.GetSubjectAsync(subjectID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Chapter GetChapter(System.Guid chapterID, string includeProperties) {
            return base.Channel.GetChapter(chapterID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Chapter> GetChapterAsync(System.Guid chapterID, string includeProperties) {
            return base.Channel.GetChapterAsync(chapterID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Test GetTest(System.Guid testID, string includeProperties) {
            return base.Channel.GetTest(testID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Test> GetTestAsync(System.Guid testID, string includeProperties) {
            return base.Channel.GetTestAsync(testID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Student GetStudent(System.Guid studentID, string includeProperties) {
            return base.Channel.GetStudent(studentID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Student> GetStudentAsync(System.Guid studentID, string includeProperties) {
            return base.Channel.GetStudentAsync(studentID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Question GetQuestion(System.Guid questionID, string includeProperties) {
            return base.Channel.GetQuestion(questionID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Question> GetQuestionAsync(System.Guid questionID, string includeProperties) {
            return base.Channel.GetQuestionAsync(questionID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.Examination GetExamination(System.Guid examinationID, string includeProperties) {
            return base.Channel.GetExamination(examinationID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.Examination> GetExaminationAsync(System.Guid examinationID, string includeProperties) {
            return base.Channel.GetExaminationAsync(examinationID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.User GetUser(System.Guid userID, string includeProperties) {
            return base.Channel.GetUser(userID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.User> GetUserAsync(System.Guid userID, string includeProperties) {
            return base.Channel.GetUserAsync(userID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.TestQuestion GetTestQuestion(System.Guid testQuestionID, string includeProperties) {
            return base.Channel.GetTestQuestion(testQuestionID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.TestQuestion> GetTestQuestionAsync(System.Guid testQuestionID, string includeProperties) {
            return base.Channel.GetTestQuestionAsync(testQuestionID, includeProperties);
        }
        
        public LectorASP.ProjectTSDotNETServiceReference.SolvedTest GetSolvedTest(System.Guid solvedTestID, string includeProperties) {
            return base.Channel.GetSolvedTest(solvedTestID, includeProperties);
        }
        
        public System.Threading.Tasks.Task<LectorASP.ProjectTSDotNETServiceReference.SolvedTest> GetSolvedTestAsync(System.Guid solvedTestID, string includeProperties) {
            return base.Channel.GetSolvedTestAsync(solvedTestID, includeProperties);
        }
        
        public void AddQuestion(LectorASP.ProjectTSDotNETServiceReference.Question question, LectorASP.ProjectTSDotNETServiceReference.Response[] responses) {
            base.Channel.AddQuestion(question, responses);
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(LectorASP.ProjectTSDotNETServiceReference.Question question, LectorASP.ProjectTSDotNETServiceReference.Response[] responses) {
            return base.Channel.AddQuestionAsync(question, responses);
        }
        
        public void AddTest(LectorASP.ProjectTSDotNETServiceReference.Test test, LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] testQuestions, string[] chaptersID) {
            base.Channel.AddTest(test, testQuestions, chaptersID);
        }
        
        public System.Threading.Tasks.Task AddTestAsync(LectorASP.ProjectTSDotNETServiceReference.Test test, LectorASP.ProjectTSDotNETServiceReference.TestQuestion[] testQuestions, string[] chaptersID) {
            return base.Channel.AddTestAsync(test, testQuestions, chaptersID);
        }
    }
}
